name: Update News and Posts

on:
  schedule:
    - cron: "0 */12 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-news-and-posts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 1      # fast shallow clone
          lfs: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m spacy download en_core_web_sm

      - name: Update Posts Data
        timeout-minutes: 10
        env:
          PYTHONUNBUFFERED: "1"
        run: python -u dashboard.py

      # ---- Commit & Push (robust) ----
      - name: Commit & push NewPosts.json (safe)
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          git config --local user.email "threatwatch.protect@gmail.com"
          git config --local user.name  "Threatwatch"

          # Stage only the file we expect to change
          git add NewPosts.json

          # If nothing changed, exit cleanly
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Auto-update JSON data for posts"

          # Update local branch safely even with unstaged changes
          git fetch origin "$BRANCH"
          git pull --rebase --autostash origin "$BRANCH"

          # Push back to the same branch
          git push origin HEAD:"$BRANCH"
