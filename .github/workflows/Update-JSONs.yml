name: Update News and Posts

on:
  schedule:
    - cron: '*/10 * * * *'  # Runs every 10 minutes
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  update-news-and-posts:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m spacy download en_core_web_sm  # Install spaCy model

    # Step 4: Run script to update news.json
    - name: Update News Data
      run: |
        python dashboard2.py  # Run the second script (for news.json)

    # Step 5: Run script to update posts.json
    - name: Update Posts Data
      run: |
        python dashboard.py  # Run the script (for posts.json)

    # Step 6: Ensure newlines at the end of both JSON files
    - name: Ensure newline at end of files
      run: |
        sed -i -e '$a\' news.json
        sed -i -e '$a\' posts.json

    # Step 7: List changes (optional, for debugging purposes)
    - name: List changes
      run: git status

    # Step 8: Commit and push changes with conflict handling
    - name: Commit and push changes if there are any
      run: |
        set -e  # Stop the script if any command returns a non-zero status
        git config --local user.email "faisal.s.albargan@gmail.com"
        git config --local user.name "FSBARGAN"

        # Stage the changes
        git add news.json posts.json

        # Commit the changes if there are any
        git diff --cached --exit-code || git commit -m "Auto-update JSON data for News and Posts"

        # Pull the latest changes with rebase, handle conflicts by aborting if needed
        git pull --rebase origin main || { git rebase --abort; exit 1; }

        # Push changes to the remote repository
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Step 9: Check repository status (optional, for debugging purposes)
    - name: Check repository status
      run: git status
