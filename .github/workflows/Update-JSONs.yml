name: Update News and Posts

on:
  schedule:
    - cron: '*/10 * * * *'  # Runs every 10 minutes
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  update-news:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m spacy download en_core_web_sm  # Install spaCy model

    - name: Run script for news
      run: |
        python dashboard2.py  # Run the script for news.json

    - name: Commit and push news changes
      run: |
        git config --local user.email "faisal.s.albargan@gmail.com"
        git config --local user.name "FSBARGAN"
        git add news.json
        git diff --cached --exit-code || git commit -m "Auto-update JSON data for news"
        git pull --rebase origin main
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-posts:
    runs-on: ubuntu-latest
    needs: update-news  # Ensures this job runs after the news update

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m spacy download en_core_web_sm  # Install spaCy model

    - name: Run script for posts
      run: |
        python dashboard.py  # Run the script for posts.json

    - name: Commit and push posts changes
      run: |
        git config --local user.email "faisal.s.albargan@gmail.com"
        git config --local user.name "FSBARGAN"
        git add posts.json
        git diff --cached --exit-code || git commit -m "Auto-update JSON data for posts"
        git pull --rebase origin main
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
